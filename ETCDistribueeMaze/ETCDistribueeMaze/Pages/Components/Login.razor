@inject IMazeService MazeService
@inject IConnectedClientService ConnectedClientService

@if (null == ConnectedClientService?.Client)
{
    <p>waiting for connection...</p>
}
else
{
    <div class="welcome font-weight-normal" >
        <h1 >Welcome to the maze game</h1>
        <p>Press 'a' 'w' 's' 'd' keys to move the character in the maze.</p>
        <p>You can message your friend in hope to find your way out the maze.</p>
        <p>Maze is maxed out at 200 by 200</p>
    </div>
    <EditForm Model=@_login OnValidSubmit="HandleValidSubmit" class="form-signin">

        <h1 class="welcome font-weight-normal">Please enter a username</h1>
        <label for="inputEmail" class="sr-only">Username</label>
        <InputText id="inputEmail" class="form-control mb-4" @bind-Value=_login.Username placeholder="Username" required autofocus />

        @if (!_processing)
        {
            <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>
        }
    </EditForm>
}

@code {
    private ViewModels.Login _login;
    private bool _processing = false;

    protected override void OnInitialized()
    {
        _processing = false;
        _login = new ViewModels.Login();
    }

    private void HandleValidSubmit()
    {
        _processing = true;
        this.User = MazeService.Login(_login.Username, this.ConnectedClientService.Client);
    }

    public User User { get; private set; }
}